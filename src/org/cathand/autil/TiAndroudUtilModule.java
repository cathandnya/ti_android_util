/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package org.cathand.autil;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import ti.modules.titanium.ui.TableViewProxy;
import ti.modules.titanium.ui.widget.TiUITableView;
import ti.modules.titanium.ui.widget.tableview.TiTableView;
import android.widget.ListView;

import ti.modules.titanium.ui.ScrollViewProxy;
import ti.modules.titanium.ui.widget.TiUIScrollView;
import android.widget.ScrollView;


@Kroll.module(name="TiAndroudUtil", id="org.cathand.autil")
public class TiAndroudUtilModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TiAndroudUtilModule";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public TiAndroudUtilModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}
	
	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}
	
	
	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}

	@Kroll.method
	public void hideTableRowSepartor(TableViewProxy tableViewProxy)
	{
	    ListView tableListView = tableViewProxy.getTableView().getListView();
	    tableListView.setDividerHeight(0);
	}

	@Kroll.method
	public void hideTableVerticalFadingEdge(TableViewProxy tableViewProxy)
	{
	    ListView tableListView = tableViewProxy.getTableView().getListView();
	    tableListView.setVerticalFadingEdgeEnabled(false);
	}

	@Kroll.method
	public void hideTableHorizontalFadingEdge(TableViewProxy tableViewProxy)
	{
	    ListView tableListView = tableViewProxy.getTableView().getListView();
	    tableListView.setHorizontalFadingEdgeEnabled(false);
	}

	@Kroll.method
	public boolean hideScrollVerticalFadingEdge(ScrollViewProxy proxy)
	{
		proxy.getScrollView();
		TiUIScrollView sview = proxy.getScrollView();
	    if (sview != null) {
	    	ScrollView view = (ScrollView)sview.getNativeView();
	    	if (view != null) {
	    		view.setVerticalFadingEdgeEnabled(false);
	    		return true;
	    	}
	    }
	    return false;
	}

	@Kroll.method
	public boolean hideScrollHorizontalFadingEdge(ScrollViewProxy proxy)
	{
		proxy.getScrollView();
		TiUIScrollView sview = proxy.getScrollView();
	    if (sview != null) {
	    	ScrollView view = (ScrollView)sview.getNativeView();
	    	if (view != null) {
	    		view.setHorizontalFadingEdgeEnabled(false);
	    		return true;
	    	}
	    }
	    return false;
	}
}

